@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@UserManager.GetUserName(User)</a>
            <div class="dropdown-menu">
                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a>

                <div class="dropdown-divider"></div>
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                    <button class="dropdown-item" type="submit">Logout</button>
                    @*<button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>*@
                </form>
            </div>
        </li>
    }
    else
    {
       @*<li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
       </li>
       <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
       </li>*@
    }
</ul>
